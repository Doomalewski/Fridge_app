@model Fridge_app.Models.User

@{
    ViewData["Title"] = "Twoja lodówka";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>Witaj, @User.Identity.Name!</h2>
    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#productSearchModal">
        <i class="bi bi-plus-circle"></i> Dodaj produkt
    </button>
</div>

<div class="row row-cols-1 row-cols-md-3 g-4" id="fridgeItems">
    @foreach (var item in Model.Fridge)
    {
        <div class="col">
            <div class="card h-100">
                <div class="card-body">
                    <h5 class="card-title">@item.Product.Name</h5>
                    <div class="card-text">
                        <div>Ilość: @item.Quantity @item.Product.Unit</div>
                        <div>Ważny do: @item.ExpirationDate.ToLocalTime().ToString("dd/MM/yyyy")</div>
                    </div>
                    <div class="mt-3">
                        <button class="btn btn-primary btn-sm"
                                data-bs-toggle="modal"
                                data-bs-target="#editModal"
                                data-id="@item.Id"
                                data-quantity="@item.Quantity"
                                data-unit="@item.Product.Unit">
                            Edytuj
                        </button>
                        <button class="btn btn-danger btn-sm"
                                data-bs-toggle="modal"
                                data-bs-target="#deleteModal"
                                data-id="@item.Id"
                                data-name="@item.Product.Name">
                            Usuń
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<form asp-controller="User" asp-action="GenerateMeal" method="post">
    <button type="submit" class="btn btn-primary mt-3">
        <i class="fas fa-magic"></i> Wygeneruj przepis
    </button>
</form>

<!-- Modal edycji -->
<div class="modal fade" id="editModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edytuj produkt</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form asp-controller="Fridge" asp-action="UpdateProduct" method="post">
                <div class="modal-body">
                    <input type="hidden" name="Id" id="editProductId">
                    <div class="mb-3">
                        <label class="form-label">Nowa ilość</label>
                        <input type="number" step="0.01" class="form-control" name="NewQuantity" required>
                        <span class="text-muted" id="unitDisplay"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anuluj</button>
                    <button type="submit" class="btn btn-primary">Zapisz zmiany</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal usuwania -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Potwierdź usunięcie</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form asp-controller="Fridge" asp-action="DeleteProduct" method="post">
                <div class="modal-body">
                    <input type="hidden" name="id" id="deleteProductId">
                    <p>Czy na pewno chcesz usunąć produkt <span id="productNameDisplay"></span>?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anuluj</button>
                    <button type="submit" class="btn btn-danger">Usuń</button>
                </div>
            </form>
        </div>
    </div>
</div>

@await Html.PartialAsync("_AddProductModals")

@section Scripts {
    <script>
        // Inicjalizacja modalów
        $('#editModal').on('show.bs.modal', function (event) {
            const button = $(event.relatedTarget);
            const modal = $(this);
            modal.find('#editProductId').val(button.data('id'));
            modal.find('input[name="NewQuantity"]').val(button.data('quantity'));
            modal.find('#unitDisplay').text(button.data('unit'));
        });

        $('#deleteModal').on('show.bs.modal', function (event) {
            const button = $(event.relatedTarget);
            const modal = $(this);
            modal.find('#deleteProductId').val(button.data('id'));
            modal.find('#productNameDisplay').text(button.data('name'));
        });

        // Obsługa powiadomień
        @if (TempData["Success"] != null)
        {
            <text>
                toastr.success('@TempData["Success"]');
            </text>
        }
        @if (TempData["Error"] != null)
        {
            <text>
                toastr.error('@TempData["Error"]');
            </text>
        }
    </script>
    <script>
            // Zaktualizowana funkcja wyszukiwania (case-insensitive)
            function searchProducts() {
                const searchTerm = document.getElementById('searchTerm').value.toLowerCase();
                const category = document.getElementById('searchCategory').value;

                fetch(`/Home/SearchProducts?searchTerm=${encodeURIComponent(searchTerm)}&category=${category}`)
                    .then(response => {
                        if (!response.ok) throw new Error('Network response was not ok');
                        return response.text();
                    })
                    .then(html => {
                        document.getElementById('searchResults').innerHTML = html;
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        document.getElementById('searchResults').innerHTML =
                            '<div class="col-12"><div class="alert alert-danger">Błąd podczas wyszukiwania</div></div>';
                    });
            }

        // Funkcja wyboru produktu
        function selectProduct(productId, productName) {
            document.getElementById('selectedProductId').value = productId;
            document.getElementById('selectedProductName').value = productName;

            // Zamknięcie modala wyszukiwania
            const searchModal = bootstrap.Modal.getInstance(document.getElementById('productSearchModal'));
            searchModal.hide();

            // Otwarcie modala formularza
            const addModal = new bootstrap.Modal(document.getElementById('addProductFormModal'));
            addModal.show();
        }

        // Obsługa formularza
        document.getElementById('addProductForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const formData = {
                ProductId: parseInt(document.getElementById('selectedProductId').value),
                Quantity: parseFloat(document.getElementById('quantity').value),
                ExpirationDate: document.getElementById('expirationDate').value || null
            };

            try {
                const response = await fetch('/Home/AddProduct', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(formData)
                });

                if (response.ok) {
                    location.reload(); // Odśwież stronę po udanym zapisie
                } else {
                    alert('Wystąpił błąd podczas zapisywania');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Błąd połączenia z serwerem');
            }

        });
    </script>
}



